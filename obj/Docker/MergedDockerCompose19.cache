name: dockercompose1999457884442294600
services:
  envoygateway:
    build:
      context: C:\Users\xgra5\Desktop\Upload\Envoy
      dockerfile: Dockerfile
    networks:
      default: null
    ports:
      - mode: ingress
        target: 9902
        published: "9902"
        protocol: tcp
      - mode: ingress
        target: 10000
        published: "10000"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\xgra5\Desktop\Upload\Envoy\envoy.yaml
        target: /etc/envoy/envoy.yaml
        bind:
          create_host_path: true
  imagevault.authenticationservice:
    build:
      context: C:\Users\xgra5\Desktop\Upload
      dockerfile: ImageVault.AuthenticationService/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ImageVault.AuthenticationService
    container_name: ImageVault.AuthenticationService
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: imagevaultauthenticationservice
    labels:
      com.microsoft.visual-studio.project-name: ImageVault.AuthenticationService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages --additionalProbingPath /.nuget/fallbackpackages2 --additionalProbingPath /.nuget/fallbackpackages3  "/app/ImageVault.AuthenticationService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8082"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\xgra5\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\xgra5\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\xgra5\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\xgra5\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\xgra5\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  imagevault.userservice:
    build:
      context: C:\Users\xgra5\Desktop\Upload
      dockerfile: ImageVault.UserService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: imagevaultuserservice
    networks:
      default: null
    ports:
      - mode: ingress
        target: 82
        published: "8084"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\xgra5\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\xgra5\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose1999457884442294600_default