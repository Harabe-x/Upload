services:

  rabbitmq:
    build: RabbitMq/
    ports:
      - "5672:5672"
      - "5671:5671"
      - "15672:15672"
    volumes:
      - rabbitMq:/var/lib/rabbitmq
  
  envoygateway:
    build: Envoy/
    ports:
      - "9902:9902"
      - "10000:10000"
    volumes:
      - ./Envoy/envoy.yaml:/etc/envoy/envoy.yaml

  imagevault.authenticationservice:
    image: ${DOCKER_REGISTRY-}imagevaultauthenticationservice
    build:
      context: .
      dockerfile: ImageVault.AuthenticationService/Dockerfile
    ports:
      - "2100:2100"
      - "2101:2101"
    volumes:
      - ./certs:/https  
    env_file:
      - "ImageVault.AuthenticationService/.env"

  imagevault.userservice:
    image: ${DOCKER_REGISTRY-}imagevaultuserservice
    build:
      context: .
      dockerfile: ImageVault.UserService/Dockerfile
    ports:
      - "2103:2103"
      - "2104:2104"
    volumes:
      - ./certs:/https
    env_file:
          - "ImageVault.UserService/.env"

  imagevault.requestmetricsservice:
    image: ${DOCKER_REGISTRY-}imagevaultrequestmetricsservice
    build:
      context: .
      dockerfile: ImageVault.RequestMetricsService/Dockerfile
    ports:
      - "2105:2105"
      - "2106:2106"
    volumes:
      - ./certs:/https
    env_file:
          - "ImageVault.RequestMetricsService/.env"
  
  
  authenticationservice.db:
    build: postgres/
    container_name: authenticationservice.db
    env_file: 
     - "postgres/token.env"
    ports:
      - "5431:5431"  
    volumes:
    - tokenservice:/var/lib/postgresql/data 
  userservice.db:
    build: postgres/
    container_name: userservice.db
    env_file:
      - "postgres/userservice.env"
    ports:
      - "5433:5433"
    volumes:
      - userservice:/var/lib/postgresql/data

  apikeyservice.db:
    build: postgres/
    container_name: apikeyservice.db
    env_file:
      - "postgres/apikeyservice.env"
    ports:
      - "5434:5434"
    volumes:
      - apikeyservice:/var/lib/postgresql/data
  
  imageservice.db:
    build: postgres/
    container_name: imageservice.db
    env_file:
      - "postgres/imageservice.env"
    ports:
      - "5435:5435"
    volumes:
      - imageservice:/var/lib/postgresql/data
  
  metricsservice.db:
    build: postgres/
    container_name: metricsservice.db
    env_file:
      - "postgres/metricsservice.env"
    ports:
      - "5436:5436"
    volumes:
      - metricsservice:/var/lib/postgresql/data
  
  uploadservice.db:
    build: postgres/
    container_name: uploadservice.db
    env_file:
      - "postgres/uploadservice.env"
    ports:
      - "5437:5437"
    volumes:
      - uploadservice:/var/lib/postgresql/data
  
  imagevault.apikeyservice:
    image: ${DOCKER_REGISTRY-}imagevaultapikeyservice
    build:
      context: .
      dockerfile: ImageVault.ApiKeyService/Dockerfile
    ports :
     - "2107:2107"
     - "2108:2108"
    env_file:
       - "ImageVault.ApiKeyService/.env"
    
  imagevault.uploadservice:
    image: ${DOCKER_REGISTRY-}imagevaultuploadservice
    build:
      context: .
      dockerfile: ImageVault.UploadService/Dockerfile
    ports : 
     - "2109:2109"
     - "2110:2110"
    env_file:
      - "ImageVault.UploadService/.env"

  imagevault.imageservice:
    image: ${DOCKER_REGISTRY-}imagevaultimageservice
    build:
      context: .
      dockerfile: ImageVault.ImageService/Dockerfile
    ports : 
     - "2111:2111"
     - "2112:2112" 
    env_file: 
      - "ImageVault.ImageService/.env"

volumes:
  rabbitMq:
    external: true
  msSqlServer:
    external: true
  tokenservice : 
    external: true
  userservice:
    external: true
  apikeyservice:
      external: true
  imageservice:
      external: true
  metricsservice:
      external: true
  uploadservice:
      external: true  